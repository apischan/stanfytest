/**
 * This class is generated by jOOQ
 */
package com.apischan.stanfytest.jooq.tables.records;


import com.apischan.stanfytest.jooq.tables.VacancySkill;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VacancySkillRecord extends TableRecordImpl<VacancySkillRecord> implements Record3<Integer, Integer, Integer> {

    private static final long serialVersionUID = 1010873484;

    /**
     * Setter for <code>public.vacancy_skill.id</code>.
     */
    public VacancySkillRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.vacancy_skill.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.vacancy_skill.vacancy_id</code>.
     */
    public VacancySkillRecord setVacancyId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.vacancy_skill.vacancy_id</code>.
     */
    public Integer getVacancyId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.vacancy_skill.skill_id</code>.
     */
    public VacancySkillRecord setSkillId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.vacancy_skill.skill_id</code>.
     */
    public Integer getSkillId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return VacancySkill.VACANCY_SKILL.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return VacancySkill.VACANCY_SKILL.VACANCY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return VacancySkill.VACANCY_SKILL.SKILL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getVacancyId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getSkillId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VacancySkillRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VacancySkillRecord value2(Integer value) {
        setVacancyId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VacancySkillRecord value3(Integer value) {
        setSkillId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VacancySkillRecord values(Integer value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VacancySkillRecord
     */
    public VacancySkillRecord() {
        super(VacancySkill.VACANCY_SKILL);
    }

    /**
     * Create a detached, initialised VacancySkillRecord
     */
    public VacancySkillRecord(Integer id, Integer vacancyId, Integer skillId) {
        super(VacancySkill.VACANCY_SKILL);

        set(0, id);
        set(1, vacancyId);
        set(2, skillId);
    }
}
