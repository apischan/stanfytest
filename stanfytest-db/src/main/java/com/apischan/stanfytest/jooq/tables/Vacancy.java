/**
 * This class is generated by jOOQ
 */
package com.apischan.stanfytest.jooq.tables;


import com.apischan.stanfytest.jooq.Keys;
import com.apischan.stanfytest.jooq.Public;
import com.apischan.stanfytest.jooq.tables.records.VacancyRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Vacancy extends TableImpl<VacancyRecord> {

    private static final long serialVersionUID = 1194163014;

    /**
     * The reference instance of <code>public.vacancy</code>
     */
    public static final Vacancy VACANCY = new Vacancy();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VacancyRecord> getRecordType() {
        return VacancyRecord.class;
    }

    /**
     * The column <code>public.vacancy.id</code>.
     */
    public final TableField<VacancyRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('vacancy_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.vacancy.company_name</code>.
     */
    public final TableField<VacancyRecord, String> COMPANY_NAME = createField("company_name", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>public.vacancy.title</code>.
     */
    public final TableField<VacancyRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

    /**
     * The column <code>public.vacancy.description</code>.
     */
    public final TableField<VacancyRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>public.vacancy</code> table reference
     */
    public Vacancy() {
        this("vacancy", null);
    }

    /**
     * Create an aliased <code>public.vacancy</code> table reference
     */
    public Vacancy(String alias) {
        this(alias, VACANCY);
    }

    private Vacancy(String alias, Table<VacancyRecord> aliased) {
        this(alias, aliased, null);
    }

    private Vacancy(String alias, Table<VacancyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<VacancyRecord, Integer> getIdentity() {
        return Keys.IDENTITY_VACANCY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Vacancy as(String alias) {
        return new Vacancy(alias, this);
    }

    /**
     * Rename this table
     */
    public Vacancy rename(String name) {
        return new Vacancy(name, null);
    }
}
